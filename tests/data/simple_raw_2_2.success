// Generated at commit 231232b10fc47d6e8ca8a84614ea435e17dd514b

SKETCH version 1.7.5
Benchmark = simple_raw_2_2_codegen.sk
    [0;32m[1551926378.2930 - DEBUG] Running stage 'parse' -- Parse the program from a file[0m
    [0;32m[1551926378.4170 - DEBUG] Running stage 'preproc' -- Preprocessing (used for all further transformations)[0m
    [0;32m[1551926378.4680 - DEBUG] Running stage SpmdLowLevelCStage[0m
    [0;32m[1551926378.4700 - DEBUG]    Running visitor FlattenStmtBlocks2[0m
    [0;32m[1551926378.4701 - DEBUG]    Running visitor SplitAssignFromVarDef[0m
    [0;32m[1551926378.4710 - DEBUG]    Running visitor EliminateComplexForLoops[0m
    [0;32m[1551926378.4720 - DEBUG] Running stage 'lowering' -- Lower for SKETCH backend[0m
    [0;32m[1551926378.4770 - DEBUG] Running stage 'sten' -- Stencil transformations[0m
[SATBackend] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[SATBackend] MAX LOOP UNROLLING = 8
[SATBackend] MAX FUNC INLINING  = 5
estimated size of main__Wrapper
stmt cnt: 0
callee main : 11

[SATBackend] After prog.accept(partialEval)
[SATBackend] OFILE = null
searching for file null
searching for file /usr/local/sketch/sketch-frontend/cegis/src/SketchSolver/cegis
searching for file /usr/local/sketch/sketch-frontend/cegis
searching for file cegis/src/SketchSolver/cegis
searching for file ../sketch-backend/src/SketchSolver/cegis
searching for file ../sketch-backend/bindings/cegis
searching for file /home/taegyunk/.sketch/cegis-1.7.5
searching for file /home/taegyunk/.sketch/cegis
searching for file /home/taegyunk/.jenv/shims/cegis
searching for file /home/taegyunk/.jenv/shims/src/SketchSolver/cegis
searching for file /home/taegyunk/.jenv/shims/../sketch-backend/src/SketchSolver/cegis
searching for file /home/taegyunk/.jenv/shims/../sketch-backend/bindings/cegis
searching for file /home/taegyunk/.local/bin/cegis
searching for file /home/taegyunk/.local/bin/src/SketchSolver/cegis
searching for file /home/taegyunk/.local/bin/../sketch-backend/src/SketchSolver/cegis
searching for file /home/taegyunk/.local/bin/../sketch-backend/bindings/cegis
searching for file /home/taegyunk/.jenv/bin/cegis
searching for file /home/taegyunk/.jenv/bin/src/SketchSolver/cegis
searching for file /home/taegyunk/.jenv/bin/../sketch-backend/src/SketchSolver/cegis
searching for file /home/taegyunk/.jenv/bin/../sketch-backend/bindings/cegis
searching for file /home/taegyunk/.cargo/bin/cegis
searching for file /home/taegyunk/.cargo/bin/src/SketchSolver/cegis
searching for file /home/taegyunk/.cargo/bin/../sketch-backend/src/SketchSolver/cegis
searching for file /home/taegyunk/.cargo/bin/../sketch-backend/bindings/cegis
searching for file /usr/local/sketch/sketch-frontend/cegis
searching for file /usr/local/sketch/sketch-frontend/src/SketchSolver/cegis
searching for file /usr/local/sketch/sketch-frontend/../sketch-backend/src/SketchSolver/cegis
resolved cegis to path /usr/local/sketch/sketch-backend/src/SketchSolver/cegis
    [0;32m[1551926378.5200 - DEBUG] executing /usr/local/sketch/sketch-backend/src/SketchSolver/cegis --bnd-inbits 2 --boundmode CALLNAME --verbosity 12 --print-version --seed 1 -simiters 4 --assumebcheck --bnd-inline-amnt 5 --bndwrand 50 -angelictupledepth 1 -srctupledepth 2 -sprandbias 1 -o /home/taegyunk/.sketch/tmp/simple_raw_2_2_codegen.sk/solution0-0 /home/taegyunk/.sketch/tmp/simple_raw_2_2_codegen.sk/input0.tmp[0m
[SATBackend] Launching: /usr/local/sketch/sketch-backend/src/SketchSolver/cegis --bnd-inbits 2 --boundmode CALLNAME --verbosity 12 --print-version --seed 1 -simiters 4 --assumebcheck --bnd-inline-amnt 5 --bndwrand 50 -angelictupledepth 1 -srctupledepth 2 -sprandbias 1 -o /home/taegyunk/.sketch/tmp/simple_raw_2_2_codegen.sk/solution0-0 /home/taegyunk/.sketch/tmp/simple_raw_2_2_codegen.sk/input0.tmp
starting command line: [/usr/local/sketch/sketch-backend/src/SketchSolver/cegis, --bnd-inbits, 2, --boundmode, CALLNAME, --verbosity, 12, --print-version, --seed, 1, -simiters, 4, --assumebcheck, --bnd-inline-amnt, 5, --bndwrand, 50, -angelictupledepth, 1, -srctupledepth, 2, -sprandbias, 1, -o, /home/taegyunk/.sketch/tmp/simple_raw_2_2_codegen.sk/solution0-0, /home/taegyunk/.sketch/tmp/simple_raw_2_2_codegen.sk/input0.tmp]
Overriding inputs with 2
boundmode = CALLNAME
assuming  bounds checks
BND W RAND = 50
SOLVER RAND SEED = 1
 optimization level = 6
Reading SKETCH Program in File /home/taegyunk/.sketch/tmp/simple_raw_2_2_codegen.sk/input0.tmp
CREATING main__Wrapper
size = 4
after ba size = 4
CREATING main__WrapperNospec
size = 2
after ba size = 2
CREATING main
size = 15
after ba size = 15
CREATING pipeline
size = 100
after ba size = 100
CREATING program
size = 6
after ba size = 6
CREATING simple_raw_2_2_stateless_alu_0_0
size = 98
after ba size = 98
CREATING simple_raw_2_2_stateless_alu_0_1
size = 98
after ba size = 98
CREATING simple_raw_2_2_stateful_operand_mux_0_0_0
size = 13
after ba size = 13
CREATING simple_raw_2_2_stateful_alu_0_0
size = 15
after ba size = 15
CREATING simple_raw_2_2_output_mux_phv_0_0
size = 13
after ba size = 13
CREATING simple_raw_2_2_output_mux_phv_0_1
size = 13
after ba size = 13
CREATING simple_raw_2_2_stateless_alu_1_0
size = 98
after ba size = 98
CREATING simple_raw_2_2_stateless_alu_1_1
size = 98
after ba size = 98
CREATING simple_raw_2_2_stateful_operand_mux_1_0_0
size = 13
after ba size = 13
CREATING simple_raw_2_2_stateful_alu_1_0
size = 15
after ba size = 15
CREATING simple_raw_2_2_output_mux_phv_1_0
size = 13
after ba size = 13
CREATING simple_raw_2_2_output_mux_phv_1_1
size = 13
after ba size = 13
CREATING simple_raw_2_2_stateless_alu_0_0_mux1
size = 13
after ba size = 13
CREATING simple_raw_2_2_stateless_alu_0_0_mux2
size = 13
after ba size = 13
CREATING simple_raw_2_2_stateless_alu_0_1_mux1
size = 13
after ba size = 13
CREATING simple_raw_2_2_stateless_alu_0_1_mux2
size = 13
after ba size = 13
CREATING simple_raw_2_2_stateful_alu_0_0_Opt_0
size = 10
after ba size = 10
CREATING simple_raw_2_2_stateful_alu_0_0_C_0
size = 3
after ba size = 3
CREATING simple_raw_2_2_stateful_alu_0_0_Mux2_0
size = 13
after ba size = 13
CREATING simple_raw_2_2_stateless_alu_1_0_mux1
size = 13
after ba size = 13
CREATING simple_raw_2_2_stateless_alu_1_0_mux2
size = 13
after ba size = 13
CREATING simple_raw_2_2_stateless_alu_1_1_mux1
size = 13
after ba size = 13
CREATING simple_raw_2_2_stateless_alu_1_1_mux2
size = 13
after ba size = 13
CREATING simple_raw_2_2_stateful_alu_1_0_Opt_0
size = 10
after ba size = 10
CREATING simple_raw_2_2_stateful_alu_1_0_C_0
size = 3
after ba size = 3
CREATING simple_raw_2_2_stateful_alu_1_0_Mux2_0
size = 13
after ba size = 13
* before  EVERYTHING: main__WrapperNospec::SPEC nodes = 2	 main__Wrapper::SKETCH nodes = 4
 INBITS = 2
 CBITS  = 5
 input_ints = 2 	 input_bits = 0
 Inlining amount = 5
 Inlining functions in the sketch.
inlined 1 new size =13
inlined 2 new size =96
inlined 26 new size =311
inlined 0 new size =311
END OF STEP 0
 Inlining functions in the spec.
inlined 0 new size =2
END OF STEP 0
Bailing out
after Creating Miter: Problem nodes = 311
* Final Problem size: Problem nodes = 311
  # OF CONTROLS:    31
 control_ints = 12 	 control_bits = 19
inputSize = 4	ctrlSize = 55
Random seeds = 1
!+ 0000000100000000101101000000000000000100000010010000011
!+ H__0:0
H__1:0
H__2:0
H__5:1
H__6:0
H__7:0
H__13:0
H__14:0
H__15:13
H__18:1
H__19:0
H__20:0
H__33:0
H__32:0
H__10:0
H__26:0
H__12:0
H__11:0
H__23:0
H__27:0
H__28:1
H__4:0
H__3:0
H__29:0
H__9:2
H__8:0
H__25:1
H__24:0
H__30:0
H__17:0
H__16:3

BEG CHECK
 * After optims it became = 4 was 311
Assert at simple_..odegen.sk:402 (0)
Simulation found a cex by random testing:  0 ms
END CHECK
********  0	ftime= 0	ctime= 0
!% 0001
!% pkt_0_2_2_0:0
state_0_3_3_0:2

BEG FIND
Level 1  intsize = 2
 * After optims it became = 242 was 311
 * After all optims it became = 242
 finder  hits = 5	 bstoreObjs=415	 sstorePages=1
hitcount 	0	412	0
hitcount 	1	1	0
hitcount 	2	2	0
bucketsPerDepth 	0	312
bucketsPerDepth 	1	43
bucketsPerDepth 	2	4
bucketsPerDepth 	3	1
* TIME TO ADD INPUT :  0.001 ms
DECISIONS START = 0
f# %assign: 7 clauses: 2066 learn: 71 restart: 1 decision: 279 propagated: 3679
END FIND
!+ 0000000001000001100000010000000010001011011011111010001
!+ H__0:0
H__1:0
H__2:0
H__5:0
H__6:0
H__7:1
H__13:0
H__14:1
H__15:1
H__18:0
H__19:0
H__20:1
H__33:0
H__32:0
H__10:0
H__26:0
H__12:1
H__11:0
H__23:0
H__27:1
H__28:0
H__4:3
H__3:2
H__29:1
H__9:2
H__8:3
H__25:3
H__24:0
H__30:1
H__17:0
H__16:2

BEG CHECK
 * After optims it became = 9 was 311
Assert at simple_..odegen.sk:675 (0)
Simulation found a cex by random testing:  0 ms
END CHECK
********  1	ftime= 0.001	ctime= 0.001
!% 0000
!% pkt_0_2_2_0:0
state_0_3_3_0:0

BEG FIND
Level 1  intsize = 2
 * After optims it became = 238 was 311
 * After all optims it became = 238
 finder  hits = 207	 bstoreObjs=588	 sstorePages=1
hitcount 	0	389	0
hitcount 	1	197	0
hitcount 	5	2	0
bucketsPerDepth 	0	364
bucketsPerDepth 	1	81
bucketsPerDepth 	2	17
bucketsPerDepth 	4	1
* TIME TO ADD INPUT :  0 ms
DECISIONS START = 279
f# %assign: 8 clauses: 3262 learn: 79 restart: 2 decision: 365 propagated: 5297
END FIND
!+ 0000000001000001100000010000010010001011011011011010001
!+ H__0:0
H__1:0
H__2:0
H__5:0
H__6:0
H__7:1
H__13:0
H__14:1
H__15:1
H__18:0
H__19:0
H__20:1
H__33:0
H__32:1
H__10:0
H__26:0
H__12:1
H__11:0
H__23:0
H__27:1
H__28:0
H__4:3
H__3:2
H__29:1
H__9:2
H__8:1
H__25:3
H__24:0
H__30:1
H__17:0
H__16:2

BEG CHECK
 * After optims it became = 11 was 311
Assert at simple_..odegen.sk:675 (0)
Simulation found a cex by random testing:  0 ms
END CHECK
********  2	ftime= 0	ctime= 0.001
!% 0110
!% pkt_0_2_2_0:2
state_0_3_3_0:1

BEG FIND
Level 1  intsize = 2
 * After optims it became = 306 was 311
 * After all optims it became = 306
 finder  hits = 279	 bstoreObjs=215	 sstorePages=1
hitcount 	1	161	0
hitcount 	2	50	0
hitcount 	4	2	0
hitcount 	5	2	0
bucketsPerDepth 	0	175
bucketsPerDepth 	1	19
* TIME TO ADD INPUT :  0.001 ms
DECISIONS START = 365
f# %assign: 8 clauses: 6099 learn: 79 restart: 3 decision: 406 propagated: 6472
END FIND
!+ 1100000111000001100000010000010110001011011011011010001
!+ H__0:1
H__1:1
H__2:0
H__5:1
H__6:1
H__7:1
H__13:0
H__14:1
H__15:1
H__18:0
H__19:0
H__20:1
H__33:0
H__32:1
H__10:0
H__26:1
H__12:1
H__11:0
H__23:0
H__27:1
H__28:0
H__4:3
H__3:2
H__29:1
H__9:2
H__8:1
H__25:3
H__24:0
H__30:1
H__17:0
H__16:2

BEG CHECK
 * After optims it became = 2 was 311
Simulation no cex:  0 ms
END CHECK
********  3	ftime= 0.001	ctime= 0
 *GOT THE CORRECT ANSWER IN 4 iterations.
 *FIND TIME 0.002 CHECK TIME 0.002 TOTAL TIME 0.004
VALUES H__0: 1, H__1: 1, H__10: 0, H__11: 0, H__12: 1, H__13: 0, H__14: 1, H__15: 1, H__16: 2, H__17: 0, H__18: 0, H__19: 0, H__2: 0, H__20: 1, H__23: 0, H__24: 0, H__25: 3, H__26: 1, H__27: 1, H__28: 0, H__29: 1, H__3: 2, H__30: 1, H__32: 1, H__33: 0, H__4: 3, H__5: 1, H__6: 1, H__7: 1, H__8: 1, H__9: 2,
RESULT = 2
**ROUND 0 : 0 Round time:  0.006 ms
RNDDEG = -1
return 0

----- Statistics -----
Total elapsed time (ms):  0.011
Model building time (ms): 0.003
Solution time (ms):       0.006
Max virtual mem (bytes):  83030016
Max resident mem (bytes): 4718592
Max private mem (bytes):  78766080
ALL CORRECT
[SATBackend] Stats for last run:
      [solution stats]
      successful? ---------------------> true
      elapsed time (s) ----------------> 0.056
      model building time (s) ---------> 0.0
      solution time (s) ---------------> 0.0
      max memory usage (MiB) ----------> 79.18359
      [SAT-specific solution stats]
      initial number of nodes ---------> -1
      number of nodes after opts ------> -1
      number of controls --------------> -1
      total number of control bits ----> -1

[SATBackend] Solver exit value: 0
    [0;32m[1551926378.5790 - DEBUG] Running stage 'subst' -- Substitute a solution (assignment to ??'s) into the sketch[0m
    [0;32m[1551926378.5810 - DEBUG] Running stage 'cleanup' -- Clean up sketch after substitutions for readability[0m
    [0;32m[1551926378.6080 - DEBUG] Running stage 'outputc' -- Output C code (to console or file)[0m
/* BEGIN PACKAGE ANONYMOUS*/
struct StateAndPacket {
    int pkt_0;
    int state_0;
}
/*simple_..odegen.sk:662*/

void _main (int pkt_0, int state_0)/*simple_..odegen.sk:662*/
{
  int _out_s1_pkt_0_s126 = 0;
  int _out_s1_state_0_s127 = 0;
  pipeline(pkt_0, state_0, _out_s1_pkt_0_s126, _out_s1_state_0_s127);
  int _out_s3_pkt_0_s128 = 0;
  int _out_s3_state_0_s129 = 0;
  program(pkt_0, state_0, _out_s3_pkt_0_s128, _out_s3_state_0_s129);
  assert ((_out_s1_pkt_0_s126 == _out_s3_pkt_0_s128) && (_out_s1_state_0_s127 == _out_s3_state_0_s129)); //Assert at simple_..odegen.sk:675 (0)
}
/*simple_..odegen.sk:35*/

void glblInit_simple_raw_2_2_output_mux_phv_0_0_ctrl__ANONYMOUS_s57 (ref int simple_raw_2_2_output_mux_phv_0_0_ctrl__ANONYMOUS_s56)/*simple_..odegen.sk:35*/
{
  simple_raw_2_2_output_mux_phv_0_0_ctrl__ANONYMOUS_s56 = 0;
}
/*simple_..odegen.sk:36*/

void glblInit_simple_raw_2_2_output_mux_phv_0_1_ctrl__ANONYMOUS_s59 (ref int simple_raw_2_2_output_mux_phv_0_1_ctrl__ANONYMOUS_s58)/*simple_..odegen.sk:36*/
{
  simple_raw_2_2_output_mux_phv_0_1_ctrl__ANONYMOUS_s58 = 1;
}
/*simple_..odegen.sk:37*/

void glblInit_simple_raw_2_2_output_mux_phv_1_0_ctrl__ANONYMOUS_s61 (ref int simple_raw_2_2_output_mux_phv_1_0_ctrl__ANONYMOUS_s60)/*simple_..odegen.sk:37*/
{
  simple_raw_2_2_output_mux_phv_1_0_ctrl__ANONYMOUS_s60 = 1;
}
/*simple_..odegen.sk:38*/

void glblInit_simple_raw_2_2_output_mux_phv_1_1_ctrl__ANONYMOUS_s63 (ref int simple_raw_2_2_output_mux_phv_1_1_ctrl__ANONYMOUS_s62)/*simple_..odegen.sk:38*/
{
  simple_raw_2_2_output_mux_phv_1_1_ctrl__ANONYMOUS_s62 = 0;
}
/*simple_..odegen.sk:39*/

void glblInit_simple_raw_2_2_salu_config_0_0__ANONYMOUS_s65 (ref int simple_raw_2_2_salu_config_0_0__ANONYMOUS_s64)/*simple_..odegen.sk:39*/
{
  simple_raw_2_2_salu_config_0_0__ANONYMOUS_s64 = 1;
}
/*simple_..odegen.sk:40*/

void glblInit_simple_raw_2_2_salu_config_1_0__ANONYMOUS_s67 (ref int simple_raw_2_2_salu_config_1_0__ANONYMOUS_s66)/*simple_..odegen.sk:40*/
{
  simple_raw_2_2_salu_config_1_0__ANONYMOUS_s66 = 0;
}
/*simple_..odegen.sk:17*/

void glblInit_simple_raw_2_2_stateful_alu_0_0_Mux2_0_global__ANONYMOUS_s69 (ref int simple_raw_2_2_stateful_alu_0_0_Mux2_0_global__ANONYMOUS_s68)/*simple_..odegen.sk:17*/
{
  simple_raw_2_2_stateful_alu_0_0_Mux2_0_global__ANONYMOUS_s68 = 0;
}
/*simple_..odegen.sk:18*/

void glblInit_simple_raw_2_2_stateful_alu_0_0_Opt_0_global__ANONYMOUS_s71 (ref int simple_raw_2_2_stateful_alu_0_0_Opt_0_global__ANONYMOUS_s70)/*simple_..odegen.sk:18*/
{
  simple_raw_2_2_stateful_alu_0_0_Opt_0_global__ANONYMOUS_s70 = 0;
}
/*simple_..odegen.sk:19*/

void glblInit_simple_raw_2_2_stateful_alu_0_0_const_0_global__ANONYMOUS_s73 (ref int simple_raw_2_2_stateful_alu_0_0_const_0_global__ANONYMOUS_s72)/*simple_..odegen.sk:19*/
{
  simple_raw_2_2_stateful_alu_0_0_const_0_global__ANONYMOUS_s72 = 1;
}
/*simple_..odegen.sk:30*/

void glblInit_simple_raw_2_2_stateful_alu_1_0_Mux2_0_global__ANONYMOUS_s75 (ref int simple_raw_2_2_stateful_alu_1_0_Mux2_0_global__ANONYMOUS_s74)/*simple_..odegen.sk:30*/
{
  simple_raw_2_2_stateful_alu_1_0_Mux2_0_global__ANONYMOUS_s74 = 0;
}
/*simple_..odegen.sk:31*/

void glblInit_simple_raw_2_2_stateful_alu_1_0_Opt_0_global__ANONYMOUS_s77 (ref int simple_raw_2_2_stateful_alu_1_0_Opt_0_global__ANONYMOUS_s76)/*simple_..odegen.sk:31*/
{
  simple_raw_2_2_stateful_alu_1_0_Opt_0_global__ANONYMOUS_s76 = 0;
}
/*simple_..odegen.sk:32*/

void glblInit_simple_raw_2_2_stateful_alu_1_0_const_0_global__ANONYMOUS_s79 (ref int simple_raw_2_2_stateful_alu_1_0_const_0_global__ANONYMOUS_s78)/*simple_..odegen.sk:32*/
{
  simple_raw_2_2_stateful_alu_1_0_const_0_global__ANONYMOUS_s78 = 3;
}
/*simple_..odegen.sk:33*/

void glblInit_simple_raw_2_2_stateful_operand_mux_0_0_0_ctrl__ANONYMOUS_s81 (ref int simple_raw_2_2_stateful_operand_mux_0_0_0_ctrl__ANONYMOUS_s80)/*simple_..odegen.sk:33*/
{
  simple_raw_2_2_stateful_operand_mux_0_0_0_ctrl__ANONYMOUS_s80 = 1;
}
/*simple_..odegen.sk:34*/

void glblInit_simple_raw_2_2_stateful_operand_mux_1_0_0_ctrl__ANONYMOUS_s83 (ref int simple_raw_2_2_stateful_operand_mux_1_0_0_ctrl__ANONYMOUS_s82)/*simple_..odegen.sk:34*/
{
  simple_raw_2_2_stateful_operand_mux_1_0_0_ctrl__ANONYMOUS_s82 = 1;
}
/*simple_..odegen.sk:10*/

void glblInit_simple_raw_2_2_stateless_alu_0_0_immediate__ANONYMOUS_s85 (ref int simple_raw_2_2_stateless_alu_0_0_immediate__ANONYMOUS_s84)/*simple_..odegen.sk:10*/
{
  simple_raw_2_2_stateless_alu_0_0_immediate__ANONYMOUS_s84 = 2;
}
/*simple_..odegen.sk:11*/

void glblInit_simple_raw_2_2_stateless_alu_0_0_mode__ANONYMOUS_s87 (ref int simple_raw_2_2_stateless_alu_0_0_mode__ANONYMOUS_s86)/*simple_..odegen.sk:11*/
{
  simple_raw_2_2_stateless_alu_0_0_mode__ANONYMOUS_s86 = 3;
}
/*simple_..odegen.sk:7*/

void glblInit_simple_raw_2_2_stateless_alu_0_0_mux1_ctrl__ANONYMOUS_s89 (ref int simple_raw_2_2_stateless_alu_0_0_mux1_ctrl__ANONYMOUS_s88)/*simple_..odegen.sk:7*/
{
  simple_raw_2_2_stateless_alu_0_0_mux1_ctrl__ANONYMOUS_s88 = 1;
}
/*simple_..odegen.sk:8*/

void glblInit_simple_raw_2_2_stateless_alu_0_0_mux2_ctrl__ANONYMOUS_s91 (ref int simple_raw_2_2_stateless_alu_0_0_mux2_ctrl__ANONYMOUS_s90)/*simple_..odegen.sk:8*/
{
  simple_raw_2_2_stateless_alu_0_0_mux2_ctrl__ANONYMOUS_s90 = 1;
}
/*simple_..odegen.sk:9*/

void glblInit_simple_raw_2_2_stateless_alu_0_0_opcode__ANONYMOUS_s93 (ref int simple_raw_2_2_stateless_alu_0_0_opcode__ANONYMOUS_s92)/*simple_..odegen.sk:9*/
{
  simple_raw_2_2_stateless_alu_0_0_opcode__ANONYMOUS_s92 = 0;
}
/*simple_..odegen.sk:15*/

void glblInit_simple_raw_2_2_stateless_alu_0_1_immediate__ANONYMOUS_s95 (ref int simple_raw_2_2_stateless_alu_0_1_immediate__ANONYMOUS_s94)/*simple_..odegen.sk:15*/
{
  simple_raw_2_2_stateless_alu_0_1_immediate__ANONYMOUS_s94 = 1;
}
/*simple_..odegen.sk:16*/

void glblInit_simple_raw_2_2_stateless_alu_0_1_mode__ANONYMOUS_s97 (ref int simple_raw_2_2_stateless_alu_0_1_mode__ANONYMOUS_s96)/*simple_..odegen.sk:16*/
{
  simple_raw_2_2_stateless_alu_0_1_mode__ANONYMOUS_s96 = 2;
}
/*simple_..odegen.sk:12*/

void glblInit_simple_raw_2_2_stateless_alu_0_1_mux1_ctrl__ANONYMOUS_s99 (ref int simple_raw_2_2_stateless_alu_0_1_mux1_ctrl__ANONYMOUS_s98)/*simple_..odegen.sk:12*/
{
  simple_raw_2_2_stateless_alu_0_1_mux1_ctrl__ANONYMOUS_s98 = 1;
}
/*simple_..odegen.sk:13*/

void glblInit_simple_raw_2_2_stateless_alu_0_1_mux2_ctrl__ANONYMOUS_s101 (ref int simple_raw_2_2_stateless_alu_0_1_mux2_ctrl__ANONYMOUS_s100)/*simple_..odegen.sk:13*/
{
  simple_raw_2_2_stateless_alu_0_1_mux2_ctrl__ANONYMOUS_s100 = 1;
}
/*simple_..odegen.sk:14*/

void glblInit_simple_raw_2_2_stateless_alu_0_1_opcode__ANONYMOUS_s103 (ref int simple_raw_2_2_stateless_alu_0_1_opcode__ANONYMOUS_s102)/*simple_..odegen.sk:14*/
{
  simple_raw_2_2_stateless_alu_0_1_opcode__ANONYMOUS_s102 = 1;
}
/*simple_..odegen.sk:23*/

void glblInit_simple_raw_2_2_stateless_alu_1_0_immediate__ANONYMOUS_s105 (ref int simple_raw_2_2_stateless_alu_1_0_immediate__ANONYMOUS_s104)/*simple_..odegen.sk:23*/
{
  simple_raw_2_2_stateless_alu_1_0_immediate__ANONYMOUS_s104 = 2;
}
/*simple_..odegen.sk:24*/

void glblInit_simple_raw_2_2_stateless_alu_1_0_mode__ANONYMOUS_s107 (ref int simple_raw_2_2_stateless_alu_1_0_mode__ANONYMOUS_s106)/*simple_..odegen.sk:24*/
{
  simple_raw_2_2_stateless_alu_1_0_mode__ANONYMOUS_s106 = 0;
}
/*simple_..odegen.sk:20*/

void glblInit_simple_raw_2_2_stateless_alu_1_0_mux1_ctrl__ANONYMOUS_s109 (ref int simple_raw_2_2_stateless_alu_1_0_mux1_ctrl__ANONYMOUS_s108)/*simple_..odegen.sk:20*/
{
  simple_raw_2_2_stateless_alu_1_0_mux1_ctrl__ANONYMOUS_s108 = 0;
}
/*simple_..odegen.sk:21*/

void glblInit_simple_raw_2_2_stateless_alu_1_0_mux2_ctrl__ANONYMOUS_s111 (ref int simple_raw_2_2_stateless_alu_1_0_mux2_ctrl__ANONYMOUS_s110)/*simple_..odegen.sk:21*/
{
  simple_raw_2_2_stateless_alu_1_0_mux2_ctrl__ANONYMOUS_s110 = 1;
}
/*simple_..odegen.sk:22*/

void glblInit_simple_raw_2_2_stateless_alu_1_0_opcode__ANONYMOUS_s113 (ref int simple_raw_2_2_stateless_alu_1_0_opcode__ANONYMOUS_s112)/*simple_..odegen.sk:22*/
{
  simple_raw_2_2_stateless_alu_1_0_opcode__ANONYMOUS_s112 = 1;
}
/*simple_..odegen.sk:28*/

void glblInit_simple_raw_2_2_stateless_alu_1_1_immediate__ANONYMOUS_s115 (ref int simple_raw_2_2_stateless_alu_1_1_immediate__ANONYMOUS_s114)/*simple_..odegen.sk:28*/
{
  simple_raw_2_2_stateless_alu_1_1_immediate__ANONYMOUS_s114 = 0;
}
/*simple_..odegen.sk:29*/

void glblInit_simple_raw_2_2_stateless_alu_1_1_mode__ANONYMOUS_s117 (ref int simple_raw_2_2_stateless_alu_1_1_mode__ANONYMOUS_s116)/*simple_..odegen.sk:29*/
{
  simple_raw_2_2_stateless_alu_1_1_mode__ANONYMOUS_s116 = 0;
}
/*simple_..odegen.sk:25*/

void glblInit_simple_raw_2_2_stateless_alu_1_1_mux1_ctrl__ANONYMOUS_s119 (ref int simple_raw_2_2_stateless_alu_1_1_mux1_ctrl__ANONYMOUS_s118)/*simple_..odegen.sk:25*/
{
  simple_raw_2_2_stateless_alu_1_1_mux1_ctrl__ANONYMOUS_s118 = 0;
}
/*simple_..odegen.sk:26*/

void glblInit_simple_raw_2_2_stateless_alu_1_1_mux2_ctrl__ANONYMOUS_s121 (ref int simple_raw_2_2_stateless_alu_1_1_mux2_ctrl__ANONYMOUS_s120)/*simple_..odegen.sk:26*/
{
  simple_raw_2_2_stateless_alu_1_1_mux2_ctrl__ANONYMOUS_s120 = 0;
}
/*simple_..odegen.sk:27*/

void glblInit_simple_raw_2_2_stateless_alu_1_1_opcode__ANONYMOUS_s123 (ref int simple_raw_2_2_stateless_alu_1_1_opcode__ANONYMOUS_s122)/*simple_..odegen.sk:27*/
{
  simple_raw_2_2_stateless_alu_1_1_opcode__ANONYMOUS_s122 = 1;
}
/*simple_..odegen.sk:662*/

void main__Wrapper (int pkt_0, int state_0)  implements main__WrapperNospec/*simple_..odegen.sk:662*/
{
  _main(pkt_0, state_0);
}
/*simple_..odegen.sk:662*/

void main__WrapperNospec (int pkt_0, int state_0)/*simple_..odegen.sk:662*/
{ }
/*simple_..odegen.sk:399*/

void pipeline (int state_and_packet_pkt_0_s134, int state_and_packet_state_0_s135, ref int _out_pkt_0_s136, ref int _out_state_0_s137)/*simple_..odegen.sk:399*/
{
  int destination_0_0_s5 = 0;
  simple_raw_2_2_stateless_alu_0_0(state_and_packet_pkt_0_s134, 0, 0, 2, 3, 1, 1, destination_0_0_s5);
  int destination_0_1_s7 = 0;
  simple_raw_2_2_stateless_alu_0_1(state_and_packet_pkt_0_s134, 0, 1, 1, 2, 1, 1, destination_0_1_s7);
  int packet_operand_salu0_0_0_s9 = 0;
  simple_raw_2_2_stateful_operand_mux_0_0_0(state_and_packet_pkt_0_s134, 0, 1, packet_operand_salu0_0_0_s9);
  int state_operand_salu_0_0 = state_and_packet_state_0_s135;
  int old_state_0_0_s11 = 0;
  simple_raw_2_2_stateful_alu_0_0(state_operand_salu_0_0, packet_operand_salu0_0_0_s9, 0, 0, 1, old_state_0_0_s11);
  int output_0_0_s13 = 0;
  simple_raw_2_2_output_mux_phv_0_0(old_state_0_0_s11, destination_0_0_s5, 0, output_0_0_s13);
  int output_0_1_s15 = 0;
  simple_raw_2_2_output_mux_phv_0_1(old_state_0_0_s11, destination_0_1_s7, 1, output_0_1_s15);
  int destination_1_0_s17 = 0;
  simple_raw_2_2_stateless_alu_1_0(output_0_0_s13, output_0_1_s15, 1, 2, 0, 0, 1, destination_1_0_s17);
  int destination_1_1_s19 = 0;
  simple_raw_2_2_stateless_alu_1_1(output_0_0_s13, output_0_1_s15, 1, 0, 0, 0, 0, destination_1_1_s19);
  int packet_operand_salu1_0_0_s21 = 0;
  simple_raw_2_2_stateful_operand_mux_1_0_0(output_0_0_s13, output_0_1_s15, 1, packet_operand_salu1_0_0_s21);
  int state_operand_salu_1_0 = 0;
  int old_state_1_0_s23 = 0;
  simple_raw_2_2_stateful_alu_1_0(state_operand_salu_1_0, packet_operand_salu1_0_0_s21, 0, 0, 3, old_state_1_0_s23);
  int output_1_0_s25 = 0;
  simple_raw_2_2_output_mux_phv_1_0(old_state_1_0_s23, destination_1_0_s17, 1, output_1_0_s25);
  int output_1_1_s27 = 0;
  simple_raw_2_2_output_mux_phv_1_1(old_state_1_0_s23, destination_1_1_s19, 0, output_1_1_s27);
  _out_pkt_0_s136 = output_1_0_s25;
  _out_state_0_s137 = state_operand_salu_0_0;
  return;
}
/*simple_..odegen.sk:391*/

void program (int state_and_packet_pkt_0_s130, int state_and_packet_state_0_s131, ref int _out_pkt_0_s132, ref int _out_state_0_s133)/*simple_..odegen.sk:391*/
{
  state_and_packet_pkt_0_s130 = 1 + state_and_packet_state_0_s131;
  _out_pkt_0_s132 = state_and_packet_pkt_0_s130;
  _out_state_0_s133 = state_and_packet_state_0_s131;
  return;
}
/*simple_..odegen.sk:75*/

void simple_raw_2_2_output_mux_phv_0_0 (int input0, int input1, int simple_raw_2_2_output_mux_phv_0_0_ctrl_local, ref int _out)/*simple_..odegen.sk:75*/
{
  if(simple_raw_2_2_output_mux_phv_0_0_ctrl_local == 0)/*simple_..odegen.sk:78*/
  {
    _out = input0;
    return;
  }
  else
  {
    _out = input1;
    return;
  }
}
/*simple_..odegen.sk:86*/

void simple_raw_2_2_output_mux_phv_0_1 (int input0, int input1, int simple_raw_2_2_output_mux_phv_0_1_ctrl_local, ref int _out)/*simple_..odegen.sk:86*/
{
  if(simple_raw_2_2_output_mux_phv_0_1_ctrl_local == 0)/*simple_..odegen.sk:89*/
  {
    _out = input0;
    return;
  }
  else
  {
    _out = input1;
    return;
  }
}
/*simple_..odegen.sk:97*/

void simple_raw_2_2_output_mux_phv_1_0 (int input0, int input1, int simple_raw_2_2_output_mux_phv_1_0_ctrl_local, ref int _out)/*simple_..odegen.sk:97*/
{
  if(simple_raw_2_2_output_mux_phv_1_0_ctrl_local == 0)/*simple_..odegen.sk:100*/
  {
    _out = input0;
    return;
  }
  else
  {
    _out = input1;
    return;
  }
}
/*simple_..odegen.sk:108*/

void simple_raw_2_2_output_mux_phv_1_1 (int input0, int input1, int simple_raw_2_2_output_mux_phv_1_1_ctrl_local, ref int _out)/*simple_..odegen.sk:108*/
{
  if(simple_raw_2_2_output_mux_phv_1_1_ctrl_local == 0)/*simple_..odegen.sk:111*/
  {
    _out = input0;
    return;
  }
  else
  {
    _out = input1;
    return;
  }
}
/*simple_..odegen.sk:246*/

void simple_raw_2_2_stateful_alu_0_0 (ref int state_1, int pkt_1, int Mux2_0, int Opt_0, int const_0, ref int _out)/*simple_..odegen.sk:246*/
{
  _out = state_1;
  int state_1_s43 = 0;
  simple_raw_2_2_stateful_alu_0_0_Opt_0(state_1, Opt_0, state_1_s43);
  int state_1_s45 = 0;
  simple_raw_2_2_stateful_alu_0_0_C_0(const_0, state_1_s45);
  int state_1_s47 = 0;
  simple_raw_2_2_stateful_alu_0_0_Mux2_0(pkt_1, state_1_s45, Mux2_0, state_1_s47)//{};
  state_1 = state_1_s43 + state_1_s47;
  return;
}
/*simple_..odegen.sk:237*/

void simple_raw_2_2_stateful_alu_0_0_C_0 (int const, ref int _out)/*simple_..odegen.sk:237*/
{
  _out = const;
  return;
}
/*simple_..odegen.sk:241*/

void simple_raw_2_2_stateful_alu_0_0_Mux2_0 (int op1, int op2, int choice, ref int _out)/*simple_..odegen.sk:241*/
{
  if(choice == 0)/*simple_..odegen.sk:242*/
  {
    _out = op1;
    return;
  }
  else
  {
    _out = op2;
    return;
  }
}
/*simple_..odegen.sk:232*/

void simple_raw_2_2_stateful_alu_0_0_Opt_0 (int op1, int enable, ref int _out)/*simple_..odegen.sk:232*/
{
  if(enable != 0)/*simple_..odegen.sk:233*/
  {
    _out = 0;
    return;
  }
  _out = op1;
  return;
}
/*simple_..odegen.sk:373*/

void simple_raw_2_2_stateful_alu_1_0 (ref int state_1, int pkt_1, int Mux2_0, int Opt_0, int const_0, ref int _out)/*simple_..odegen.sk:373*/
{
  _out = state_1;
  int state_1_s29 = 0;
  simple_raw_2_2_stateful_alu_1_0_Opt_0(state_1, Opt_0, state_1_s29);
  int state_1_s31 = 0;
  simple_raw_2_2_stateful_alu_1_0_C_0(const_0, state_1_s31);
  int state_1_s33 = 0;
  simple_raw_2_2_stateful_alu_1_0_Mux2_0(pkt_1, state_1_s31, Mux2_0, state_1_s33)//{};
  state_1 = state_1_s29 + state_1_s33;
  return;
}
/*simple_..odegen.sk:364*/

void simple_raw_2_2_stateful_alu_1_0_C_0 (int const, ref int _out)/*simple_..odegen.sk:364*/
{
  _out = const;
  return;
}
/*simple_..odegen.sk:368*/

void simple_raw_2_2_stateful_alu_1_0_Mux2_0 (int op1, int op2, int choice, ref int _out)/*simple_..odegen.sk:368*/
{
  if(choice == 0)/*simple_..odegen.sk:369*/
  {
    _out = op1;
    return;
  }
  else
  {
    _out = op2;
    return;
  }
}
/*simple_..odegen.sk:359*/

void simple_raw_2_2_stateful_alu_1_0_Opt_0 (int op1, int enable, ref int _out)/*simple_..odegen.sk:359*/
{
  if(enable != 0)/*simple_..odegen.sk:360*/
  {
    _out = 0;
    return;
  }
  _out = op1;
  return;
}
/*simple_..odegen.sk:48*/

void simple_raw_2_2_stateful_operand_mux_0_0_0 (int input0, int input1, int simple_raw_2_2_stateful_operand_mux_0_0_0_ctrl_local, ref int _out)/*simple_..odegen.sk:48*/
{
  if(simple_raw_2_2_stateful_operand_mux_0_0_0_ctrl_local == 0)/*simple_..odegen.sk:51*/
  {
    _out = input0;
    return;
  }
  else
  {
    _out = input1;
    return;
  }
}
/*simple_..odegen.sk:59*/

void simple_raw_2_2_stateful_operand_mux_1_0_0 (int input0, int input1, int simple_raw_2_2_stateful_operand_mux_1_0_0_ctrl_local, ref int _out)/*simple_..odegen.sk:59*/
{
  if(simple_raw_2_2_stateful_operand_mux_1_0_0_ctrl_local == 0)/*simple_..odegen.sk:62*/
  {
    _out = input0;
    return;
  }
  else
  {
    _out = input1;
    return;
  }
}
/*simple_..odegen.sk:143*/

void simple_raw_2_2_stateless_alu_0_0 (int input0, int input1, int opcode_hole_local, int immediate_operand_hole_local, int alu_mode_hole_local, int mux1_ctrl_hole_local, int mux2_ctrl_hole_local, ref int _out)/*simple_..odegen.sk:143*/
{
  int x_s53 = 0;
  simple_raw_2_2_stateless_alu_0_0_mux1(input0, input1, mux1_ctrl_hole_local, x_s53);
  int y_s55 = 0;
  simple_raw_2_2_stateless_alu_0_0_mux2(input0, input1, mux2_ctrl_hole_local, y_s55);
  if(opcode_hole_local == 0)/*simple_..odegen.sk:151*/
  {
    _out = (alu_mode_hole_local == 0 ? x_s53 + y_s55 : (alu_mode_hole_local == 1 ? x_s53 + immediate_operand_hole_local : immediate_operand_hole_local));
    return;
  }
  else
  {
    if(opcode_hole_local == 1)/*simple_..odegen.sk:153*/
    {
      _out = (alu_mode_hole_local == 0 ? x_s53 - y_s55 : (alu_mode_hole_local == 1 ? immediate_operand_hole_local - y_s55 : x_s53 - immediate_operand_hole_local));
      return;
    }
    else
    {
      if(opcode_hole_local == 2)/*simple_..odegen.sk:155*/
      {
        _out = (alu_mode_hole_local == 0 ? (x_s53 != 0) || (y_s55 != 0) : (alu_mode_hole_local == 1 ? (immediate_operand_hole_local != 0) || (y_s55 != 0) : (x_s53 != 0) || (immediate_operand_hole_local != 0)));
        return;
      }
      else
      {
        if(opcode_hole_local == 3)/*simple_..odegen.sk:159*/
        {
          _out = (alu_mode_hole_local == 0 ? (x_s53 != 0) && (y_s55 != 0) : (alu_mode_hole_local == 1 ? (immediate_operand_hole_local != 0) && (y_s55 != 0) : (x_s53 != 0) && (immediate_operand_hole_local != 0)));
          return;
        }
        else
        {
          if(opcode_hole_local == 4)/*simple_..odegen.sk:163*/
          {
            _out = (alu_mode_hole_local == 0 ? !(x_s53 != 0) : !(y_s55 != 0));
            return;
          }
          else
          {
            if(opcode_hole_local == 5)/*simple_..odegen.sk:166*/
            {
              _out = x_s53 != y_s55;
              return;
            }
            else
            {
              if(opcode_hole_local == 6)/*simple_..odegen.sk:168*/
              {
                _out = x_s53 == y_s55;
                return;
              }
              else
              {
                if(opcode_hole_local == 7)/*simple_..odegen.sk:170*/
                {
                  _out = x_s53 >= y_s55;
                  return;
                }
                else
                {
                  _out = x_s53 < y_s55;
                  return;
                }
              }
            }
          }
        }
      }
    }
  }
}
/*simple_..odegen.sk:123*/

void simple_raw_2_2_stateless_alu_0_0_mux1 (int input0, int input1, int simple_raw_2_2_stateless_alu_0_0_mux1_ctrl_local, ref int _out)/*simple_..odegen.sk:123*/
{
  if(simple_raw_2_2_stateless_alu_0_0_mux1_ctrl_local == 0)/*simple_..odegen.sk:126*/
  {
    _out = input0;
    return;
  }
  else
  {
    _out = input1;
    return;
  }
}
/*simple_..odegen.sk:133*/

void simple_raw_2_2_stateless_alu_0_0_mux2 (int input0, int input1, int simple_raw_2_2_stateless_alu_0_0_mux2_ctrl_local, ref int _out)/*simple_..odegen.sk:133*/
{
  if(simple_raw_2_2_stateless_alu_0_0_mux2_ctrl_local == 0)/*simple_..odegen.sk:136*/
  {
    _out = input0;
    return;
  }
  else
  {
    _out = input1;
    return;
  }
}
/*simple_..odegen.sk:196*/

void simple_raw_2_2_stateless_alu_0_1 (int input0, int input1, int opcode_hole_local, int immediate_operand_hole_local, int alu_mode_hole_local, int mux1_ctrl_hole_local, int mux2_ctrl_hole_local, ref int _out)/*simple_..odegen.sk:196*/
{
  int x_s49 = 0;
  simple_raw_2_2_stateless_alu_0_1_mux1(input0, input1, mux1_ctrl_hole_local, x_s49);
  int y_s51 = 0;
  simple_raw_2_2_stateless_alu_0_1_mux2(input0, input1, mux2_ctrl_hole_local, y_s51);
  if(opcode_hole_local == 0)/*simple_..odegen.sk:204*/
  {
    _out = (alu_mode_hole_local == 0 ? x_s49 + y_s51 : (alu_mode_hole_local == 1 ? x_s49 + immediate_operand_hole_local : immediate_operand_hole_local));
    return;
  }
  else
  {
    if(opcode_hole_local == 1)/*simple_..odegen.sk:206*/
    {
      _out = (alu_mode_hole_local == 0 ? x_s49 - y_s51 : (alu_mode_hole_local == 1 ? immediate_operand_hole_local - y_s51 : x_s49 - immediate_operand_hole_local));
      return;
    }
    else
    {
      if(opcode_hole_local == 2)/*simple_..odegen.sk:208*/
      {
        _out = (alu_mode_hole_local == 0 ? (x_s49 != 0) || (y_s51 != 0) : (alu_mode_hole_local == 1 ? (immediate_operand_hole_local != 0) || (y_s51 != 0) : (x_s49 != 0) || (immediate_operand_hole_local != 0)));
        return;
      }
      else
      {
        if(opcode_hole_local == 3)/*simple_..odegen.sk:212*/
        {
          _out = (alu_mode_hole_local == 0 ? (x_s49 != 0) && (y_s51 != 0) : (alu_mode_hole_local == 1 ? (immediate_operand_hole_local != 0) && (y_s51 != 0) : (x_s49 != 0) && (immediate_operand_hole_local != 0)));
          return;
        }
        else
        {
          if(opcode_hole_local == 4)/*simple_..odegen.sk:216*/
          {
            _out = (alu_mode_hole_local == 0 ? !(x_s49 != 0) : !(y_s51 != 0));
            return;
          }
          else
          {
            if(opcode_hole_local == 5)/*simple_..odegen.sk:219*/
            {
              _out = x_s49 != y_s51;
              return;
            }
            else
            {
              if(opcode_hole_local == 6)/*simple_..odegen.sk:221*/
              {
                _out = x_s49 == y_s51;
                return;
              }
              else
              {
                if(opcode_hole_local == 7)/*simple_..odegen.sk:223*/
                {
                  _out = x_s49 >= y_s51;
                  return;
                }
                else
                {
                  _out = x_s49 < y_s51;
                  return;
                }
              }
            }
          }
        }
      }
    }
  }
}
/*simple_..odegen.sk:176*/

void simple_raw_2_2_stateless_alu_0_1_mux1 (int input0, int input1, int simple_raw_2_2_stateless_alu_0_1_mux1_ctrl_local, ref int _out)/*simple_..odegen.sk:176*/
{
  if(simple_raw_2_2_stateless_alu_0_1_mux1_ctrl_local == 0)/*simple_..odegen.sk:179*/
  {
    _out = input0;
    return;
  }
  else
  {
    _out = input1;
    return;
  }
}
/*simple_..odegen.sk:186*/

void simple_raw_2_2_stateless_alu_0_1_mux2 (int input0, int input1, int simple_raw_2_2_stateless_alu_0_1_mux2_ctrl_local, ref int _out)/*simple_..odegen.sk:186*/
{
  if(simple_raw_2_2_stateless_alu_0_1_mux2_ctrl_local == 0)/*simple_..odegen.sk:189*/
  {
    _out = input0;
    return;
  }
  else
  {
    _out = input1;
    return;
  }
}
/*simple_..odegen.sk:270*/

void simple_raw_2_2_stateless_alu_1_0 (int input0, int input1, int opcode_hole_local, int immediate_operand_hole_local, int alu_mode_hole_local, int mux1_ctrl_hole_local, int mux2_ctrl_hole_local, ref int _out)/*simple_..odegen.sk:270*/
{
  int x_s39 = 0;
  simple_raw_2_2_stateless_alu_1_0_mux1(input0, input1, mux1_ctrl_hole_local, x_s39);
  int y_s41 = 0;
  simple_raw_2_2_stateless_alu_1_0_mux2(input0, input1, mux2_ctrl_hole_local, y_s41);
  if(opcode_hole_local == 0)/*simple_..odegen.sk:278*/
  {
    _out = (alu_mode_hole_local == 0 ? x_s39 + y_s41 : (alu_mode_hole_local == 1 ? x_s39 + immediate_operand_hole_local : immediate_operand_hole_local));
    return;
  }
  else
  {
    if(opcode_hole_local == 1)/*simple_..odegen.sk:280*/
    {
      _out = (alu_mode_hole_local == 0 ? x_s39 - y_s41 : (alu_mode_hole_local == 1 ? immediate_operand_hole_local - y_s41 : x_s39 - immediate_operand_hole_local));
      return;
    }
    else
    {
      if(opcode_hole_local == 2)/*simple_..odegen.sk:282*/
      {
        _out = (alu_mode_hole_local == 0 ? (x_s39 != 0) || (y_s41 != 0) : (alu_mode_hole_local == 1 ? (immediate_operand_hole_local != 0) || (y_s41 != 0) : (x_s39 != 0) || (immediate_operand_hole_local != 0)));
        return;
      }
      else
      {
        if(opcode_hole_local == 3)/*simple_..odegen.sk:286*/
        {
          _out = (alu_mode_hole_local == 0 ? (x_s39 != 0) && (y_s41 != 0) : (alu_mode_hole_local == 1 ? (immediate_operand_hole_local != 0) && (y_s41 != 0) : (x_s39 != 0) && (immediate_operand_hole_local != 0)));
          return;
        }
        else
        {
          if(opcode_hole_local == 4)/*simple_..odegen.sk:290*/
          {
            _out = (alu_mode_hole_local == 0 ? !(x_s39 != 0) : !(y_s41 != 0));
            return;
          }
          else
          {
            if(opcode_hole_local == 5)/*simple_..odegen.sk:293*/
            {
              _out = x_s39 != y_s41;
              return;
            }
            else
            {
              if(opcode_hole_local == 6)/*simple_..odegen.sk:295*/
              {
                _out = x_s39 == y_s41;
                return;
              }
              else
              {
                if(opcode_hole_local == 7)/*simple_..odegen.sk:297*/
                {
                  _out = x_s39 >= y_s41;
                  return;
                }
                else
                {
                  _out = x_s39 < y_s41;
                  return;
                }
              }
            }
          }
        }
      }
    }
  }
}
/*simple_..odegen.sk:250*/

void simple_raw_2_2_stateless_alu_1_0_mux1 (int input0, int input1, int simple_raw_2_2_stateless_alu_1_0_mux1_ctrl_local, ref int _out)/*simple_..odegen.sk:250*/
{
  if(simple_raw_2_2_stateless_alu_1_0_mux1_ctrl_local == 0)/*simple_..odegen.sk:253*/
  {
    _out = input0;
    return;
  }
  else
  {
    _out = input1;
    return;
  }
}
/*simple_..odegen.sk:260*/

void simple_raw_2_2_stateless_alu_1_0_mux2 (int input0, int input1, int simple_raw_2_2_stateless_alu_1_0_mux2_ctrl_local, ref int _out)/*simple_..odegen.sk:260*/
{
  if(simple_raw_2_2_stateless_alu_1_0_mux2_ctrl_local == 0)/*simple_..odegen.sk:263*/
  {
    _out = input0;
    return;
  }
  else
  {
    _out = input1;
    return;
  }
}
/*simple_..odegen.sk:323*/

void simple_raw_2_2_stateless_alu_1_1 (int input0, int input1, int opcode_hole_local, int immediate_operand_hole_local, int alu_mode_hole_local, int mux1_ctrl_hole_local, int mux2_ctrl_hole_local, ref int _out)/*simple_..odegen.sk:323*/
{
  int x_s35 = 0;
  simple_raw_2_2_stateless_alu_1_1_mux1(input0, input1, mux1_ctrl_hole_local, x_s35);
  int y_s37 = 0;
  simple_raw_2_2_stateless_alu_1_1_mux2(input0, input1, mux2_ctrl_hole_local, y_s37);
  if(opcode_hole_local == 0)/*simple_..odegen.sk:331*/
  {
    _out = (alu_mode_hole_local == 0 ? x_s35 + y_s37 : (alu_mode_hole_local == 1 ? x_s35 + immediate_operand_hole_local : immediate_operand_hole_local));
    return;
  }
  else
  {
    if(opcode_hole_local == 1)/*simple_..odegen.sk:333*/
    {
      _out = (alu_mode_hole_local == 0 ? x_s35 - y_s37 : (alu_mode_hole_local == 1 ? immediate_operand_hole_local - y_s37 : x_s35 - immediate_operand_hole_local));
      return;
    }
    else
    {
      if(opcode_hole_local == 2)/*simple_..odegen.sk:335*/
      {
        _out = (alu_mode_hole_local == 0 ? (x_s35 != 0) || (y_s37 != 0) : (alu_mode_hole_local == 1 ? (immediate_operand_hole_local != 0) || (y_s37 != 0) : (x_s35 != 0) || (immediate_operand_hole_local != 0)));
        return;
      }
      else
      {
        if(opcode_hole_local == 3)/*simple_..odegen.sk:339*/
        {
          _out = (alu_mode_hole_local == 0 ? (x_s35 != 0) && (y_s37 != 0) : (alu_mode_hole_local == 1 ? (immediate_operand_hole_local != 0) && (y_s37 != 0) : (x_s35 != 0) && (immediate_operand_hole_local != 0)));
          return;
        }
        else
        {
          if(opcode_hole_local == 4)/*simple_..odegen.sk:343*/
          {
            _out = (alu_mode_hole_local == 0 ? !(x_s35 != 0) : !(y_s37 != 0));
            return;
          }
          else
          {
            if(opcode_hole_local == 5)/*simple_..odegen.sk:346*/
            {
              _out = x_s35 != y_s37;
              return;
            }
            else
            {
              if(opcode_hole_local == 6)/*simple_..odegen.sk:348*/
              {
                _out = x_s35 == y_s37;
                return;
              }
              else
              {
                if(opcode_hole_local == 7)/*simple_..odegen.sk:350*/
                {
                  _out = x_s35 >= y_s37;
                  return;
                }
                else
                {
                  _out = x_s35 < y_s37;
                  return;
                }
              }
            }
          }
        }
      }
    }
  }
}
/*simple_..odegen.sk:303*/

void simple_raw_2_2_stateless_alu_1_1_mux1 (int input0, int input1, int simple_raw_2_2_stateless_alu_1_1_mux1_ctrl_local, ref int _out)/*simple_..odegen.sk:303*/
{
  if(simple_raw_2_2_stateless_alu_1_1_mux1_ctrl_local == 0)/*simple_..odegen.sk:306*/
  {
    _out = input0;
    return;
  }
  else
  {
    _out = input1;
    return;
  }
}
/*simple_..odegen.sk:313*/

void simple_raw_2_2_stateless_alu_1_1_mux2 (int input0, int input1, int simple_raw_2_2_stateless_alu_1_1_mux2_ctrl_local, ref int _out)/*simple_..odegen.sk:313*/
{
  if(simple_raw_2_2_stateless_alu_1_1_mux2_ctrl_local == 0)/*simple_..odegen.sk:316*/
  {
    _out = input0;
    return;
  }
  else
  {
    _out = input1;
    return;
  }
}
/* END PACKAGE ANONYMOUS*/
[SKETCH] DONE
Total time = 362
1.04user 0.05system 0:00.43elapsed 252%CPU (0avgtext+0avgdata 118372maxresident)k
12816inputs+184outputs (12major+12000minor)pagefaults 0swaps
