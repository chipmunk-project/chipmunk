/*
// Original program:
#define MAX_ALLOWABLE_RTT 30

// Total number of bytes seen so far.
int input_traffic_Bytes = 0;

// Sum of rtt so far
int sum_rtt_Tr = 0;

// Number of packets with a valid RTT
int num_pkts_with_rtt = 0;

struct Packet {
  int size_bytes;
  int rtt;
};

void func(struct Packet pkt) {
  input_traffic_Bytes += pkt.size_bytes;
  if (pkt.rtt < MAX_ALLOWABLE_RTT) {
    sum_rtt_Tr += pkt.rtt;
    num_pkts_with_rtt += 1;
  }
}
 */

// Output the rename map:
// stateless variable rename list:

// state_and_packet.pkt_0 = pkt.size_bytes
// state_and_packet.pkt_1 = pkt.rtt

// stateful variable rename list:

// state_and_packet.state_group_0_state_0 = input_traffic_Bytes
// state_and_packet.state_group_1_state_0 = sum_rtt_Tr
// state_and_packet.state_group_2_state_0 = num_pkts_with_rtt

|StateAndPacket| program (|StateAndPacket| state_and_packet) {state_and_packet.state_group_0_state_0+=state_and_packet.pkt_0;if (state_and_packet.pkt_1<30) {state_and_packet.state_group_1_state_0+=state_and_packet.pkt_1;state_and_packet.state_group_2_state_0+=1;; }; return state_and_packet;
}

