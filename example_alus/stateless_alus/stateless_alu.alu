// Max value of opcode is 20
type : stateless
state variables : {}
hole variables : {opcode, immediate_operand}
packet fields : {pkt_0, pkt_1, pkt_2}

if (opcode == 0) {
  return immediate_operand;
} elif (opcode == 1) {
  return pkt_0 + pkt_1;
} elif (opcode == 2) {
  return pkt_0 + immediate_operand;
} elif (opcode == 3) {
  return pkt_0 - pkt_1;
} elif (opcode == 4) {
  return pkt_0 - immediate_operand;
} elif (opcode == 5) {
  return immediate_operand - pkt_0;
} elif (opcode == 6) {
  return pkt_0!=pkt_1;
} elif (opcode == 7) {
  return (pkt_0 != immediate_operand);
} elif (opcode == 8) {
  return (pkt_0 == pkt_1);
} elif (opcode == 9) {
  return (pkt_0 == immediate_operand);
} elif (opcode == 10) {
  return (pkt_0 >= pkt_1);
} elif (opcode == 11) {
  return (pkt_0 >= immediate_operand);
} elif (opcode == 12) {
  return (pkt_0 < pkt_1);
} elif (opcode == 13) {
  return (pkt_0 < immediate_operand);
} elif (opcode == 14) {
  return pkt_0 != 0 ? pkt_1 : pkt_2;
} elif (opcode == 15) {
  return pkt_0 != 0 ? pkt_1 : immediate_operand;
} elif (opcode == 16) {
  return ((pkt_0 != 0) || (pkt_1 != 0));
} elif (opcode == 17) {
  return ((pkt_0 != 0) || (immediate_operand != 0));
}  elif (opcode == 18) {
  return ((pkt_0 != 0) && (pkt_1 != 0));
} elif (opcode == 19) {
  return ((pkt_0 != 0) && (immediate_operand != 0));
} else {
  return (pkt_0 == 0);
}
