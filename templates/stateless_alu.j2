int {{ alu_name }}({{arg_list|join(',')}}, int opcode_hole_local, int immediate_operand_hole_local, int alu_mode_hole_local, int mux1_ctrl_hole_local, int mux2_ctrl_hole_local) {
  int opcode = opcode_hole_local;
  int immediate_operand = immediate_operand_hole_local;
  int alu_mode = alu_mode_hole_local;

  int x = {{ mux1 }}({{potential_operands|join(',')}}, mux1_ctrl_hole_local);
  int y = {{ mux2 }}({{potential_operands|join(',')}}, mux2_ctrl_hole_local);

  if (opcode == 0) {
    return (alu_mode == 0 ? x + y : (alu_mode == 1 ? x + immediate_operand : immediate_operand));
  } else if (opcode == 1) {
    return (alu_mode == 0 ? x - y : (alu_mode == 1 ? immediate_operand - y : x - immediate_operand));
  } else if (opcode == 2) {
    return (alu_mode == 0 ? (x != 0) || (y != 0)
                          : (alu_mode == 1 ? (immediate_operand != 0) || (y != 0)
                                           : (x != 0) || (immediate_operand != 0)));
  } else if (opcode == 3) {
    return (alu_mode == 0 ? (x != 0) && (y != 0)
                          : (alu_mode == 1 ? (immediate_operand != 0) && (y != 0)
                                           : (x != 0) && (immediate_operand != 0)));
  } else if (opcode == 4) {
    return (alu_mode == 0 ? ! (x != 0)
                          : ! (y != 0));
  } else if (opcode == 5) {
    return x != y;
  } else if (opcode == 6) {
    return x == y;
  } else if (opcode == 7) {
    return x >= y;
  } else {
    return x < y;
  }
}
