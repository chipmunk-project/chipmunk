(assert (forall ((pkt_0_3_5_0  Int  )(state_group_0_state_0_4_6_0  Int  )) (let ((_n0 state_group_0_state_0_4_6_0 ))
(let ((_n1 true ))
(let ((_n2 (+   _n0   (ite  _n1  1 0) ) ))
(let ((_n3 false ))
(let ((_n4 (ite (=  _n0  2)  (ite  _n3  1 0)   _n2  ) ))
(let ((_n5 2 ))
(let ((_n6 (=   _n0   _n5 ) ))
(let ((_n7 (not  _n6 ) ))
(let ((_n8 (+   _n0   (ite  _n7  1 0) ) ))
(let ((_n9 (ite (=  _n0  2)  (ite  _n3  1 0)   _n0  ) ))
(let ((_n10 (ite (=  (ite  _n6  1 0)  1)  _n9   _n8  ) ))
(let ((_n11 (=   _n10   _n4 ) ))
(let ((_n13 (=   _n10   (ite  _n3  1 0) ) ))
(let ((_n14 (not  _n13 ) ))
(let ((_n15 (ite (=  (ite  _n14  1 0)  1)  _n3   _n13  ) ))
(let ((_n16 (=   (ite _n15 1 0)   (ite  _n6  1 0) ) ))
(let ((_n18 pkt_0_3_5_0 ))
(implies  (and (and (>= state_group_0_state_0_4_6_0 0) (< state_group_0_state_0_4_6_0 32 ))  (and (>= pkt_0_3_5_0 0) (< pkt_0_3_5_0 32 )) )   (and  _n11  _n16 )  ))))))))))))))))))))
(check-sat)
(get-model)
(exit)
